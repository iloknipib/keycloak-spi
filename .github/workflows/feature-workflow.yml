name: Deploy Feature

on:
  push:
    branches:
      - 'develop'

jobs:
  build-and-push:
    environment: feature
    runs-on: ubuntu-20.04
    steps:

      - name: Notify slack build started
        uses: voxmedia/github-action-slack-notify-build@v1
        id: slack
        with:
          channel_id: C02M0AYDRQ9
          status: BUILD-STARTED (feature)
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: actions/checkout@v2

      - name: Set short commit hash in env variables
        run: echo "GITHUB_SHA_MERGE=$(echo $(git rev-parse --short ${{ github.sha }}))" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: "895498447357.dkr.ecr.ap-south-1.amazonaws.com/keycloak:feature-${{ env.GITHUB_SHA_MERGE }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        
      - name: Build init container image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/init.Dockerfile
          push: true
          tags: "895498447357.dkr.ecr.ap-south-1.amazonaws.com/keycloak:feature-init-container:latest"

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - shell: bash
        run: |
          echo ${{ steps.slack.outputs.message_id }} > slack_message_id.txt

      - name: Store slace message id
        uses: actions/upload-artifact@v2
        with:
          name: slack_message_id
          path: slack_message_id.txt
          retention-days: 1

      - name: Notify slack success
        if: success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C02M0AYDRQ9
          message_id: ${{ steps.slack.outputs.message_id }}
          status: BUILD-SUCCESS (feature)
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify slack failure
        if: failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C02M0AYDRQ9
          message_id: ${{ steps.slack.outputs.message_id }}
          status: BUILD-FAILED (feature)
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    needs: [ build-and-push ]
    environment: feature
    runs-on: ubuntu-20.04
    steps:

      - name: Download slack message id
        uses: actions/download-artifact@v2
        with:
          name: slack_message_id

      - name: Get slack message id
        id: slack
        run: echo "::set-output name=message_id::$(cat slack_message_id.txt)"

      - name: Notify slack deployment started
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C02M0AYDRQ9
          message_id: ${{ steps.slack.outputs.message_id }}
          status: DEPLOY-STARTED (feature)
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Check out prodops repository
        uses: actions/checkout@master
        with:
          repository: Dehaat/prodops
          ssh-key: ${{ secrets.PRODOPS_KEY }}
          ref: 'master'

      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          python3 -m pip install -r requirements.txt
          echo '${{ secrets.VAULT_PASSWORD }}' > ~/.vault_pass.txt

      - name: Set short commit hash in env variables
        run: echo "GITHUB_SHA_MERGE=$(echo $(git rev-parse --short ${{ github.sha }}))" >> $GITHUB_ENV

      - name: run playbook
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY}}
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID}}
        run: |
          cat ~/.vault_pass.txt
          cd ansible/playbooks
          ansible-playbook keycloak.yml --vault-password-file ~/.vault_pass.txt -e image_tag=$(echo feature-${{ env.GITHUB_SHA_MERGE }} ) -e "deploy_env=feature" -v

      - name: Notify slack success
        if: success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C02M0AYDRQ9
          message_id: ${{ steps.slack.outputs.message_id }}
          status: DEPLOY-SUCCESS (feature)
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify slack failure
        if: failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C02M0AYDRQ9
          message_id: ${{ steps.slack.outputs.message_id }}
          status: DEPLOY-FAILED (feature)
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
